service:
  name: botui
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  serverless-offline:
    useChildProcesses: true
  dynamodb:
    stages:
      - dev
    start:
      host: dynamodb
      port: 8000
      noStart: true
    seed:
      dev:
        sources:
          - table: ${self:resources.Resources.coversationsTable.Properties.TableName}
            sources: [./db/seeds/conversations.json]

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    AWS_ACCESS_KEY_ID: ${env:AWS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${env:AWS_SECRET_ACCESS_KEY}
    AWS_DEFAULT_REGION: ${env:AWS_DEFAULT_REGION}

functions:
  getConversation:
    handler: handler.getConversation
    events:
      - http:
          method: get
          path: conversations/{serviceCode}

resources:
  Resources:
    coversationsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service.name}-conversations
        AttributeDefinitions:
          - AttributeName: serviceCode
            AttributeType: S
        KeySchema:
          - AttributeName: serviceCode
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1